apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "multitool.fullname" . }}
  namespace: {{ template "multitool.namespace" . }}
  labels:
    {{- include "multitool.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "multitool.selectorLabels" . | nindent 8 }}
  template:
    metadata:
      labels:
        {{- include "multitool.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.service.hostNetwork }}
      hostNetwork: true
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.image.pullSecrets | default .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "multitool.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ template "multitool.fullname" . }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ if or (.Values.global.imageRegistry) .Values.image.registry }}{{ .Values.image.registry | default .Values.global.imageRegistry }}/{{ end }}{{ .Values.image.repository }}{{ if .Values.image.digest }}@{{ .Values.image.digest }}{{ else }}:{{ .Values.image.tag | default .Chart.AppVersion }}{{ end }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: HTTP_PORT
          value: {{ .Values.service.httpPort | quote }}
        - name: HTTPS_PORT
          value: {{ .Values.service.httpsPort | quote }}
        {{- range $key, $value := .Values.extraEnvVars }}
          - name: "{{ $key }}"
            value: "{{ $value }}"
        {{- end }}
        ports:
        - containerPort: {{ .Values.service.httpPort }}
          name: http-port
        - containerPort: {{ .Values.service.httpsPort }}
          name: https-port
        resources:
          {{- toYaml .Values.resources | nindent 12 }}